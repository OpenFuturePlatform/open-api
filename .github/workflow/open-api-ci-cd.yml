name: Open API CI/CD

on:
  push:
    branches:
      - '*'
  release:
    types: [published]

jobs:

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    continue-on-error: false

    env:
      GOOGLE_CLIENT_ID: secrets.GOOGLE_CLIENT_ID_DEV
      GOOGLE_CLIENT_SECRET: secrets.GOOGLE_CLIENT_SECRET_DEV
      NETWORK_URL: secrets.NETWORK_URL_DEV
      ETHEREUM_PRIVATE_KEY: secrets.ETHEREUM_PRIVATE_KEY_DEV
      OPEN_TOKEN_ADDRESS: secrets.OPEN_TOKEN_ADDRESS_DEV
      EVENT_SUBSCRIPTION: false
      STATE_API_URL: state-api-url

    services:

      postgres:
        image: postgres:latest
        ports:
          - 8080:8080
        env:
          POSTGRES_PASSWORD: open-api
          POSTGRES_USER: open-api
          POSTGRES_DB: open-api

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare Java SDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Execute tests
        run: ./gradlew check

      - name: Save test results
        uses: actions/upload-artifact@v2
        with:
          name: test_results_${{ github.sha }}
          path: build/reports/tests/test/**

      - name: Execute test coverage report
        run: ./gradlew jacocoTestReport

      - name: Save test coverage results
        uses: actions/upload-artifact@v2
        with:
          name: test_coverage_results_${{ github.sha }}
          path: build/reports/jacoco/test/html/**


  build:
    name: Build project
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: [tests]
    if: github.event.action == 'published'

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare Java SDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Build project
        run: ./gradlew assemble

      - name: Save executables
        uses: actions/upload-artifact@v2
        with:
          name: assembles_${{ github.sha }}
          path: build/libs/*.jar

  package:
    name: Packaging
    runs-on: ubuntu-latest
    continue-on-error: false
    needs: [tests, build]

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: assembles_${{ github.sha }}
          path: build/libs

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: openplatform/open-state:${{ github.event.release.tag_name }}
          file: docker/Dockerfile
