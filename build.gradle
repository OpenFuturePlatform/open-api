plugins {
    id 'jacoco'
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'org.jetbrains.kotlin.kapt' version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.72'
    id 'org.springframework.boot' version '2.0.4.RELEASE'
    id 'com.palantir.git-version' version '0.12.0-rc2'
    id 'io.zensoft.versioning' version '1.1.0'
}

apply plugin: 'io.spring.dependency-management'

group = 'io.openfuture.api'
sourceCompatibility = 11

repositories {
    mavenCentral()
    maven {
        url "https://dl.bintray.com/ethereum/maven/"
    }
}

ext {
    s3Version = "1.11.333"
}

dependencies {

    // Spring
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-freemarker")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")

    // OAuth
    implementation("org.springframework.security:spring-security-oauth2-client")
    implementation("org.springframework.security:spring-security-oauth2-jose")

    // Database
    runtimeOnly("org.postgresql:postgresql")
    implementation("org.flywaydb:flyway-core")

    // Ethereum
    implementation("org.web3j:web3j-spring-boot-starter:1.6.0")
    implementation('org.web3j:core:4.5.0')
    implementation("org.ethereum:ethereumj-core:1.7.2-RELEASE")

    // AWS
    implementation("com.amazonaws:aws-java-sdk-s3:${s3Version}")

    // Kotlin
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")

    // JAX-B dependencies for JDK 9+
    implementation('jakarta.xml.bind:jakarta.xml.bind-api:2.3.2')
    implementation('org.glassfish.jaxb:jaxb-runtime:2.3.2')
    implementation('org.javassist:javassist:3.23.1-GA')

    // Utils
    implementation('commons-io:commons-io:2.8.0')

    // Test
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.mockito:mockito-core:2.22.0")
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.resources.srcDirs += 'frontend/build/resources'
    main.resources.srcDirs += 'widget/build/resources'
}

// Kotlin
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

// Jacoco
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'io/openfuture/api/*Application*',
                    'io/openfuture/api/model/**',
                    'io/openfuture/api/exception/**',
                    'io/openfuture/api/annotation/**',
                    'io/openfuture/api/config/**'
            ])
        })
    }
}
check.dependsOn jacocoTestReport

// Front
processResources.dependsOn(':frontend:assemble')
processResources.dependsOn(':widget:assemble')