plugins {
    id 'jacoco'
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.2.51"
    id "org.jetbrains.kotlin.kapt" version "1.2.51"
    id "org.jetbrains.kotlin.plugin.spring" version "1.2.51"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.2.51"
    id "org.springframework.boot" version "2.0.3.RELEASE"
}

apply plugin: "io.spring.dependency-management"

group = "io.openfuture.api"
version = "2.5.0"
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
    maven {
        url "https://dl.bintray.com/ethereum/maven/"
    }
}

ext {
    s3Version = "1.11.333"
}

dependencies {
    // Spring
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-freemarker")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")

    // OAuth
    compile("org.springframework.security:spring-security-oauth2-client")
    compile("org.springframework.security:spring-security-oauth2-jose")

    // Database
    runtime("org.postgresql:postgresql")
    compile("org.flywaydb:flyway-core")

    // Ethereum
    compile("org.web3j:web3j-spring-boot-starter:1.6.0")
    compile("org.ethereum:ethereumj-core:1.7.2-RELEASE")

    // AWS
    compile("com.amazonaws:aws-java-sdk-s3:${s3Version}")

    // Kotlin
    compile("com.fasterxml.jackson.module:jackson-module-kotlin")
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")

    // Utils
    compile("commons-io:commons-io:2.6")

    // Test
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.resources.srcDirs += 'frontend/build/resources'
}

// Kotlin
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

// Jacoco
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    'io/openfuture/api/*Application*',
                    'io/openfuture/api/model/**',
                    'io/openfuture/api/exception/**',
                    'io/openfuture/api/annotation/**',
                    'io/openfuture/api/config/**'
            ])
        })
    }
}
check.dependsOn jacocoTestReport

// Front
processResources.dependsOn(':frontend:assemble')